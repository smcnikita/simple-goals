generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                      Int      @id @default(autoincrement())
  name                    String
  email                   String   @unique
  password                String
  description_settings_id Int?
  created_at              DateTime @default(now()) @map("created_at")
  updated_at              DateTime @updatedAt @map("updated_at")
  Goals                   Goals[]
  Years                   Years[]
  is_encrypted_goals      Boolean  @default(false)
}

model DescriptionSettings {
  id    Int    @id @default(autoincrement())
  value String @unique
}

model Years {
  id             Int       @id @default(autoincrement())
  year           Int
  user_id        Int
  user           Users     @relation(fields: [user_id], references: [id])
  can_edit_past  Boolean   @default(false)
  show_statistic Boolean   @default(true)
  created_at     DateTime  @default(now()) @map("created_at")
  updated_at     DateTime  @updatedAt @map("updated_at")
  Goals          Goals[]
  Section        Section[]

  @@unique([user_id, year])
}

model Statuses {
  id         Int      @id @default(autoincrement())
  key        String   @unique
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
}

model Goals {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  status_id    Int
  year_id      Int
  year         Years     @relation(fields: [year_id], references: [id])
  user_id      Int
  user         Users     @relation(fields: [user_id], references: [id])
  section      Section?  @relation(fields: [section_id], references: [id])
  section_id   Int?
  created_at   DateTime  @default(now()) @map("created_at")
  updated_at   DateTime  @updatedAt @map("updated_at")
  completed_at DateTime?
}

model Section {
  id         Int      @id @default(autoincrement())
  name       String
  year       Years    @relation(fields: [years_id], references: [id])
  years_id   Int
  Goals      Goals[]
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
}
